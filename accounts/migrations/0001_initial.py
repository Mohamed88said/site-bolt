# Generated by Django 5.2.4 on 2025-07-13 12:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('buyer', 'Acheteur'), ('seller', 'Vendeur'), ('delivery', 'Livreur'), ('admin', 'Admin'), ('superadmin', 'Super Admin'), ('support', 'Support')], default='buyer', max_length=20, verbose_name="Type d'utilisateur")),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(blank=True, max_length=10, verbose_name='Code postal')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Pays')),
                ('avatar', models.ImageField(blank=True, upload_to='avatars/', verbose_name='Avatar')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Vérifié')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('verification_code', models.CharField(blank=True, max_length=6)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('bike', 'Vélo'), ('scooter', 'Scooter'), ('motorcycle', 'Moto'), ('car', 'Voiture'), ('van', 'Camionnette'), ('truck', 'Camion')], max_length=20, verbose_name='Type de véhicule')),
                ('license_plate', models.CharField(blank=True, max_length=20, verbose_name="Plaque d'immatriculation")),
                ('license_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro de permis')),
                ('license_document', models.FileField(upload_to='delivery_docs/', verbose_name='Permis de conduire')),
                ('vehicle_registration', models.FileField(blank=True, upload_to='delivery_docs/', verbose_name='Carte grise')),
                ('insurance_document', models.FileField(blank=True, upload_to='delivery_docs/', verbose_name='Assurance')),
                ('verification_status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('rejected', 'Rejeté'), ('suspended', 'Suspendu')], default='pending', max_length=20)),
                ('verification_notes', models.TextField(blank=True, verbose_name='Notes de vérification')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('availability_radius', models.IntegerField(default=10, verbose_name='Rayon de disponibilité (km)')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='Note')),
                ('total_deliveries', models.IntegerField(default=0, verbose_name='Livraisons totales')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_deliverers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil livreur',
                'verbose_name_plural': 'Profils livreurs',
            },
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200, verbose_name="Nom de l'entreprise")),
                ('company_description', models.TextField(blank=True, verbose_name='Description')),
                ('logo', models.ImageField(blank=True, upload_to='seller_logos/', verbose_name='Logo')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('tax_number', models.CharField(blank=True, max_length=50, verbose_name='Numéro de TVA')),
                ('bank_account', models.CharField(blank=True, max_length=100, verbose_name='Compte bancaire')),
                ('identity_document', models.FileField(upload_to='seller_docs/', verbose_name="Pièce d'identité")),
                ('rccm_document', models.FileField(upload_to='seller_docs/', verbose_name='RCCM')),
                ('business_license', models.FileField(blank=True, upload_to='seller_docs/', verbose_name='Licence commerciale')),
                ('verification_status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('rejected', 'Rejeté'), ('suspended', 'Suspendu')], default='pending', max_length=20)),
                ('verification_notes', models.TextField(blank=True, verbose_name='Notes de vérification')),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('accepts_cash_on_delivery', models.BooleanField(default=True, verbose_name='Accepte le paiement à la livraison')),
                ('accepts_store_pickup', models.BooleanField(default=False, verbose_name='Accepte le retrait en boutique')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='Note')),
                ('total_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Ventes totales')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seller_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_sellers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil vendeur',
                'verbose_name_plural': 'Profils vendeurs',
            },
        ),
    ]
