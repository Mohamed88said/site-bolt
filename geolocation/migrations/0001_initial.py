# Generated by Django 5.2.4 on 2025-07-13 12:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GuineaPrefecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Préfecture',
                'verbose_name_plural': 'Préfectures',
            },
        ),
        migrations.CreateModel(
            name='GuineaRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Région',
                'verbose_name_plural': 'Régions',
            },
        ),
        migrations.CreateModel(
            name='GuineaCommune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('is_active', models.BooleanField(default=True)),
                ('prefecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communes', to='geolocation.guineaprefecture')),
            ],
            options={
                'verbose_name': 'Commune',
                'verbose_name_plural': 'Communes',
            },
        ),
        migrations.AddField(
            model_name='guineaprefecture',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefectures', to='geolocation.guinearegion'),
        ),
        migrations.CreateModel(
            name='DeliveryZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la zone')),
                ('base_delivery_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Coût de base')),
                ('cost_per_km', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Coût par km')),
                ('free_delivery_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Seuil livraison gratuite')),
                ('estimated_delivery_days', models.IntegerField(default=1, verbose_name='Délai estimé (jours)')),
                ('is_active', models.BooleanField(default=True)),
                ('communes', models.ManyToManyField(blank=True, to='geolocation.guineacommune')),
                ('prefectures', models.ManyToManyField(blank=True, to='geolocation.guineaprefecture')),
                ('regions', models.ManyToManyField(blank=True, to='geolocation.guinearegion')),
            ],
            options={
                'verbose_name': 'Zone de livraison',
                'verbose_name_plural': 'Zones de livraison',
            },
        ),
        migrations.CreateModel(
            name='LocationPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du lieu')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude')),
                ('address_details', models.TextField(blank=True, verbose_name="Détails de l'adresse")),
                ('landmark', models.CharField(blank=True, max_length=200, verbose_name='Point de repère')),
                ('access_instructions', models.TextField(blank=True, verbose_name="Instructions d'accès")),
                ('verified_by_locals', models.BooleanField(default=False, verbose_name='Vérifié par les locaux')),
                ('verification_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commune', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geolocation.guineacommune')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('prefecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geolocation.guineaprefecture')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geolocation.guinearegion')),
            ],
            options={
                'verbose_name': 'Point de localisation',
                'verbose_name_plural': 'Points de localisation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Adresse principale')),
                ('label', models.CharField(blank=True, max_length=50, verbose_name='Libellé')),
                ('additional_info', models.TextField(blank=True, verbose_name='Informations supplémentaires')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geolocation.locationpoint')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Localisation utilisateur',
                'verbose_name_plural': 'Localisations utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='LocationVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accurate', models.BooleanField(verbose_name='Localisation exacte')),
                ('suggested_correction', models.TextField(blank=True, verbose_name='Correction suggérée')),
                ('local_description', models.TextField(blank=True, verbose_name='Description locale')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='geolocation.locationpoint')),
                ('verified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vérification de localisation',
                'verbose_name_plural': 'Vérifications de localisation',
                'unique_together': {('location_point', 'verified_by')},
            },
        ),
    ]
